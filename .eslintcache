[{"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\reportWebVitals.js":"3","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\ToDo.js":"4","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\tasks.js":"5","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\addTasks.js":"6","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\idGenerator.js":"7","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\removeModal.js":"8","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\editTaskModal.js":"9","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\utils.js":"10","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\ContactUs.js":"11","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\About.js":"12","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\SingleTask.js":"13","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\NotFound.js":"14","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\NavMenu.js":"15","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\Spinner.js":"16","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\store.js":"17","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\reducer.js":"18","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\action.js":"19","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\request.js":"20","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\Search.js":"21"},{"size":728,"mtime":1613145923779,"results":"22","hashOfConfig":"23"},{"size":1907,"mtime":1615480971079,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":5566,"mtime":1615892425693,"results":"26","hashOfConfig":"23"},{"size":3073,"mtime":1615577297546,"results":"27","hashOfConfig":"23"},{"size":3981,"mtime":1615903929903,"results":"28","hashOfConfig":"23"},{"size":130,"mtime":1607784804793,"results":"29","hashOfConfig":"23"},{"size":886,"mtime":1607786177462,"results":"30","hashOfConfig":"23"},{"size":3620,"mtime":1615903029384,"results":"31","hashOfConfig":"23"},{"size":53,"mtime":1611411120629,"results":"32","hashOfConfig":"23"},{"size":1540,"mtime":1615992712750,"results":"33","hashOfConfig":"23"},{"size":85,"mtime":1611930997893,"results":"34","hashOfConfig":"23"},{"size":4529,"mtime":1615901726442,"results":"35","hashOfConfig":"23"},{"size":83,"mtime":1611930900468,"results":"36","hashOfConfig":"23"},{"size":1600,"mtime":1613923149920,"results":"37","hashOfConfig":"23"},{"size":228,"mtime":1612878809412,"results":"38","hashOfConfig":"23"},{"size":267,"mtime":1613073276520,"results":"39","hashOfConfig":"23"},{"size":2971,"mtime":1615901392018,"results":"40","hashOfConfig":"23"},{"size":2940,"mtime":1615901407630,"results":"41","hashOfConfig":"23"},{"size":489,"mtime":1615480009593,"results":"42","hashOfConfig":"23"},{"size":4943,"mtime":1615830598590,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"efkhl6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\index.js",[],["92","93"],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\App.js",["94"],"import React from \"react\";\nimport ToDo from './MyProject/ToDo';\nimport {BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport About from \"./MyProject/About\";\nimport ContactUs from \"./MyProject/ContactUs\";\nimport SingleTask from \"./MyProject/SingleTask\";\nimport NotFound from \"./MyProject/NotFound\";\nimport NavMenu from \"./MyProject/NavMenu\";\nimport { connect } from \"react-redux\";\nimport Spiner from \"./MyProject/Spinner\"\n\nconst  App = (props) => {\n  const routes = [\n    {\n      path:\"/\",\n      component:ToDo,\n    },\n    {\n      path:\"/about\",\n      component:About,\n    },\n    {\n      path:\"/contact\",\n      component:ContactUs,\n    },\n    {\n      path:\"/task/:id\",\n      component:SingleTask,\n    },\n    {\n      path:\"/404\",\n      component:NotFound,\n    },\n  ]\n\n    const {errorMessage, successMessage, loading} = props\n  if(errorMessage){\n      toast.error(errorMessage)\n  }\n  if(successMessage){\n    toast.success(successMessage)\n  }\n  \n  return (\n    <div>\n     { loading && <Spiner />\n\n}\n    <NavMenu />\n      <Switch>\n        {\n          routes.map((route, index) => {\n            return (\n              <Route path={route.path} component={route.component} exact key={index}/>\n            )\n          })\n        }\n        <Redirect to=\"404\" />\n      </Switch>\n        <ToastContainer\n          position=\"bottom-left\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n\n       \n  </div>\n     \n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return{\n    errorMessage: state.error,\n      loading: state.loading,\n      successMessage: state.successMessage,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\ToDo.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\tasks.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\addTasks.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\idGenerator.js",[],["95","96"],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\removeModal.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\editTaskModal.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\utils.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\ContactUs.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\About.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\SingleTask.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\NotFound.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\NavMenu.js",["97"],"import React,{ Component }  from \"react\";\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\"\r\nimport {BrowserRouter as Router } from \"react-router-dom\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\nexport default class NavMenu extends Component{\r\n   \r\n    render(){\r\n        return(\r\n           \r\n            <header className=\"bg-dark\" >\r\n                <Container>\r\n                    <Navbar expand=\"md\" variant=\"dark\"> \r\n                        <Navbar.Brand href=\"/\">Tasks</Navbar.Brand>\r\n                        <Navbar.Toggle area-controls=\"navbarResponsive\" />\r\n                        <Navbar.Collapse id=\"navbarResponsive\">\r\n                            <Nav as=\"ul\" className=\"ml-auto\">\r\n                                <Nav.Item as=\"li\">\r\n                                        <NavLink className=\"nav-link\" exact activeStyle={{color:\"white\"}}  to=\"/\"> Home</NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                        <NavLink className=\"nav-link\" exact activeStyle={{color:\"white\"}}  to=\"/about\"> About</NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                        <NavLink className=\"nav-link\" exact activeStyle={{color:\"white\"}}  to=\"/contact\"> Contact Us</NavLink>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Container>\r\n            </header>\r\n        )\r\n    }\r\n    \r\n}","C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\Spinner.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\reducer.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\action.js",[],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\request.js",[],["98","99"],"C:\\Users\\Lenovo\\Desktop\\demoApp\\demo-app\\src\\MyProject\\Search.js",["100","101","102","103","104","105","106"],"import React , {useState} from 'react'\r\nimport {Navbar, Nav, Form ,FormControl, Button, NavDropdown} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTasks} from \"./action\"\r\n\r\nconst statusOpions = [\r\n    {\r\n        label: 'Reset',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'Active',\r\n        value: 'active'\r\n    },\r\n    {\r\n        label: 'Done',\r\n        value: 'done'\r\n    }\r\n]\r\n\r\n\r\nconst sortOpions = [\r\n    {\r\n        label: 'Reset',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'A-Z',\r\n        value: 'a-z'\r\n    },\r\n    {\r\n        label: 'Z-A',\r\n        value: 'z-a'\r\n    },\r\n    {\r\n        label: 'Creation date oldest',\r\n        value: 'creation-date-oldest'\r\n    },\r\n    {\r\n        label: 'Creation date newest',\r\n        value: 'creation-date-newest'\r\n    },\r\n    {\r\n        label: 'Complation date oldest',\r\n        value: 'complation-date-oldest'\r\n    },\r\n    {\r\n        label: 'Complation date newest',\r\n        value: 'complation-date-newest'\r\n    }\r\n]\r\n\r\nconst dateOptions = [\r\n    {\r\n        label: 'Creation date oldest',\r\n        value: 'creation-date-oldest'\r\n    },\r\n    {\r\n        label: 'Creation date newest',\r\n        value: 'creation-date-newest'\r\n    },\r\n    {\r\n        label: 'Complation date oldest',\r\n        value: 'complation-date-oldest'\r\n    },\r\n    {\r\n        label: 'Complation date newest',\r\n        value: 'complation-date-newest'\r\n    }\r\n]\r\n\r\n\r\n\r\n function Search (props){\r\n\r\n    const [search, setSearch] = useState('')\r\n\r\n     const [status, setStatus] = useState({\r\n         label: '',\r\n         value: ''\r\n     })\r\n\r\n     const [sort, setSort] = useState({\r\n        label: '',\r\n        value: ''\r\n     })\r\n\r\n     const [dates, setDates] = useState({\r\n        create_lte: null, \r\n        create_gte: null,\r\n        complete_lte: null,\r\n        complete_gte: null\r\n     })\r\n\r\n     const handleSubmit = () => {\r\n         const data = {}\r\n        const [create_lte, create_gte, complete_lte, complete_gte] = data\r\n\r\n     }\r\n\r\n     return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                <NavDropdown title={status.value ? status.label : \"Status\"}>\r\n                    {\r\n                        statusOpions.map((item, index) => {\r\n                          return(\r\n                            <NavDropdown.Item \r\n                            key={index}\r\n                            active={status.value === item.value}\r\n                            onClick={() => setStatus(item)}\r\n                            >{item.label}</NavDropdown.Item>\r\n                          )\r\n                        })\r\n                    }\r\n                </NavDropdown>\r\n                <NavDropdown title={sort.value ? sort.label : \"Status\"}>\r\n                    {\r\n                        sortOpions.map((item, index) => {\r\n                          return(\r\n                            <NavDropdown.Item \r\n                            key={index}\r\n                            active={sort.value === item.value}\r\n                            onClick={() => setSort(item)}\r\n                            >{item.label}</NavDropdown.Item>\r\n                          )\r\n                        })\r\n                    }\r\n                </NavDropdown>\r\n                </Nav>\r\n                <div>\r\n                    {\r\n                        dateOptions.map((item, index) => {\r\n                            return(\r\n                                <div key={index}>\r\n                                    <span>\r\n                                        {/* <DatePicker \r\n                                        \r\n                                        /> */}\r\n\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Form inline>\r\n                <FormControl \r\n                    type=\"text\" \r\n                    placeholder=\"Search\" \r\n                    className=\"mr-sm-2\"\r\n                    value={search}\r\n                    onChange={(event)=>setSearch(event.target.value)}\r\n                 />\r\n                <Button \r\n                    variant=\"outline-success\"\r\n                    onClick={() => handleSubmit}\r\n                >Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n     )\r\n }\r\n\r\n const mapDispatchToProps = {\r\n     getTasks\r\n }\r\n\r\n\r\n export default connect(null, mapDispatchToProps)(Search);",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":26,"nodeType":"113","messageId":"114","endLine":3,"endColumn":32},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":26,"nodeType":"113","messageId":"114","endLine":3,"endColumn":32},{"ruleId":"107","replacedBy":"117"},{"ruleId":"109","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"120","line":90,"column":13,"nodeType":"113","messageId":"114","endLine":90,"endColumn":18},{"ruleId":"111","severity":1,"message":"121","line":90,"column":20,"nodeType":"113","messageId":"114","endLine":90,"endColumn":28},{"ruleId":"111","severity":1,"message":"122","line":99,"column":16,"nodeType":"113","messageId":"114","endLine":99,"endColumn":26},{"ruleId":"111","severity":1,"message":"123","line":99,"column":28,"nodeType":"113","messageId":"114","endLine":99,"endColumn":38},{"ruleId":"111","severity":1,"message":"124","line":99,"column":40,"nodeType":"113","messageId":"114","endLine":99,"endColumn":52},{"ruleId":"111","severity":1,"message":"125","line":99,"column":54,"nodeType":"113","messageId":"114","endLine":99,"endColumn":66},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar",["126"],["127"],["126"],["127"],"'DatePicker' is defined but never used.","'dates' is assigned a value but never used.","'setDates' is assigned a value but never used.","'create_lte' is assigned a value but never used.","'create_gte' is assigned a value but never used.","'complete_lte' is assigned a value but never used.","'complete_gte' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]